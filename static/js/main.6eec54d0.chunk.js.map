{"version":3,"sources":["App.js","index.js"],"names":["App","useState","breakTime","setBreakTime","sessionTime","setSessionTime","timerType","setTimerType","timeLeft","setTimeLeft","pause","setPause","starter","useRef","changeTime","console","log","buzzer","useEffect","interval","setInterval","clearInterval","document","getElementById","play","stopTimer","current","className","id","onClick","type","value","minutes","Math","floor","seconds","toMMSS","Date","getFullYear","src","ReactDOM","render","StrictMode"],"mappings":"mLAmJeA,EAjJH,WAAO,IAAD,EACkBC,mBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,OAEsBF,mBAAS,IAF/B,mBAETG,EAFS,KAEIC,EAFJ,OAGkBJ,mBAAS,WAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIgBN,mBAAuB,GAAdG,GAJzB,mBAITI,EAJS,KAICC,EAJD,OAKUR,oBAAS,GALnB,mBAKTS,EALS,KAKFC,EALE,KAMVC,EAAUC,iBAAO,MAEjBC,EAAa,WACbN,EAAW,GACbC,GAAY,SAACD,GAAD,OAAcA,EAAW,KAEtB,IAAbA,IACgB,YAAdF,GACFS,QAAQC,IAAIR,GACZD,EAAa,SACbE,EAAwB,GAAZP,GACZe,MAEAR,EAA0B,GAAdL,GACZG,EAAa,WACbU,OAINC,qBAAU,WACR,IAAKR,EAAO,CACV,IAAMS,EAAWC,YAAYN,EAAY,KACzC,OAAO,kBAAMO,cAAcF,QAG/B,IAgCMF,EAAS,WACCK,SAASC,eAAe,QAChCC,QAMFC,EAAY,WAChBd,GAAS,GACTU,cAAcT,EAAQc,UA2BxB,OACE,sBAAKC,UAAU,YAAYC,GAAG,QAA9B,UACE,wEACA,sBAAKD,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,8CACA,sBAAKA,UAAU,iBAAf,UACE,uBAAOE,QA5ES,WACpB3B,EAAY,IACdC,EAAaD,EAAY,GACP,UAAdI,GACFG,EAA8B,IAAjBP,EAAY,MAwEc4B,KAAK,SAASC,MAAM,MACvD,6BAAK7B,IACL,uBAAO2B,QApES,WACxB1B,EAAaD,EAAY,GACP,UAAdI,GACFG,EAA8B,IAAjBP,EAAY,KAiEgB4B,KAAK,SAASC,MAAM,YAG3D,sBAAKJ,UAAU,SAAf,UACE,gDACA,sBAAKA,UAAU,iBAAf,UACE,uBAAOE,QApEQ,WACnBzB,EAAc,IAChBC,GAAe,SAACD,GAAD,OAAiBA,EAAc,KAC5B,YAAdE,GACFG,EAAgC,IAAnBL,EAAc,MAgEW0B,KAAK,SAASC,MAAM,MACtD,6BAAK3B,IACL,uBAAOyB,QA5DQ,WACvBxB,GAAe,SAACD,GAAD,OAAiBA,EAAc,KAC5B,YAAdE,GACFG,EAAgC,IAAnBL,EAAc,KAyDa0B,KAAK,SAASC,MAAM,eAI5D,qBAAKJ,UAAU,kBAAf,SACE,gCACE,6BAAKrB,IACL,6BAnCO,WACb,IAAI0B,EAAUC,KAAKC,MAAM1B,EAAW,IAChC2B,EAAU3B,EAAqB,GAAVwB,EAOzB,OANIA,EAAU,KACZA,EAAU,IAAMA,GAEdG,EAAU,KACZA,EAAU,IAAMA,GAEXH,EAAU,IAAMG,EA0BZC,KACL,sBAAKT,UAAU,gBAAf,UACE,wBAAQE,QA5CI,WAChBnB,GAfJK,QAAQC,IAAIZ,EAAaF,EAAWM,GACpCG,GAAS,IAiBPc,KAwCsCG,GAAG,cAAnC,SACGlB,EAAQ,UAAY,YAEvB,wBAAQmB,QAtDG,WACnBJ,IACAtB,EAAa,GACbE,EAAe,IACfE,EAAa,WACbE,EAAY,OAiD2BmB,GAAG,QAAlC,2BAMJ,yDAA6B,IAAIS,MAAOC,cAAxC,sBAEF,uBACEV,GAAG,OACHW,IAAI,kH,MCxIZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,W","file":"static/js/main.6eec54d0.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [breakTime, setBreakTime] = useState(5);\n  const [sessionTime, setSessionTime] = useState(25);\n  const [timerType, setTimerType] = useState(\"SESSION\");\n  const [timeLeft, setTimeLeft] = useState(sessionTime * 60);\n  const [pause, setPause] = useState(true);\n  const starter = useRef(null);\n\n  const changeTime = () => {\n    if (timeLeft > 0) {\n      setTimeLeft((timeLeft) => timeLeft - 1);\n    }\n    if (timeLeft === 0) {\n      if (timerType === \"SESSION\") {\n        console.log(timeLeft);\n        setTimerType(\"BREAK\");\n        setTimeLeft(breakTime * 60);\n        buzzer();\n      } else {\n        setTimeLeft(sessionTime * 60);\n        setTimerType(\"SESSION\");\n        buzzer();\n      }\n    }\n  };\n  useEffect(() => {\n    if (!pause) {\n      const interval = setInterval(changeTime, 1000)\n      return () => clearInterval(interval)\n    }\n  })\n  const onBreakDecreClick = () => {\n    if (breakTime > 0) {\n      setBreakTime(breakTime - 1);\n      if (timerType === \"BREAK\") {\n        setTimeLeft((breakTime - 1) * 60);\n      }\n    } else {\n      return;\n    }\n  };\n  const onBreakIncreClick = () => {\n    setBreakTime(breakTime + 1);\n    if (timerType === \"BREAK\") {\n      setTimeLeft((breakTime + 1) * 60);\n    }\n  };\n  const onSessDecreClick = () => {\n    if (sessionTime > 0) {\n      setSessionTime((sessionTime) => sessionTime - 1);\n      if (timerType === \"SESSION\") {\n        setTimeLeft((sessionTime - 1) * 60);\n      }\n    } else {\n      return;\n    }\n  };\n  const onSessIncreClick = () => {\n    setSessionTime((sessionTime) => sessionTime + 1);\n    if (timerType === \"SESSION\") {\n      setTimeLeft((sessionTime + 1) * 60);\n    }\n  };\n  const buzzer = () => {\n    const sound = document.getElementById(\"beep\");\n    sound.play();\n  };\n  const startTimer = () => {\n    console.log(sessionTime, breakTime, timeLeft);\n    setPause(false);\n  };\n  const stopTimer = () => {\n    setPause(true);\n    clearInterval(starter.current);\n  };\n  const onResetClick = () => {\n    stopTimer();\n    setBreakTime(5);\n    setSessionTime(25);\n    setTimerType(\"SESSION\");\n    setTimeLeft(1500);\n  };\n  const onChangePause = () => {\n    if (pause) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n  };\n  const toMMSS = () => {\n    var minutes = Math.floor(timeLeft / 60);\n    var seconds = timeLeft - minutes * 60;\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    return minutes + \":\" + seconds;\n  };\n  return (\n    <div className=\"container\" id=\"clock\">\n      <h1>üçÖPomodoro ClocküçÖ</h1>\n      <div className=\"row\">\n        <div className=\"length\">\n          <h2>BREAK LENGTH</h2>\n          <div className=\"length-control\">\n            <input onClick={onBreakDecreClick} type=\"button\" value=\"-\" />\n            <h3>{breakTime}</h3>\n            <input onClick={onBreakIncreClick} type=\"button\" value=\"+\" />\n          </div>\n        </div>\n        <div className=\"length\">\n          <h2>SESSION LENGTH</h2>\n          <div className=\"length-control\">\n            <input onClick={onSessDecreClick} type=\"button\" value=\"-\" />\n            <h3>{sessionTime}</h3>\n            <input onClick={onSessIncreClick} type=\"button\" value=\"+\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"session-section\">\n        <div>\n          <h2>{timerType}</h2>\n          <h1>{toMMSS(timeLeft)}</h1>\n          <div className=\"timer-buttons\">\n            <button onClick={onChangePause} id=\"start-pause\">\n              {pause ? \" START \" : \" PAUSE \"}\n            </button>\n            <button onClick={onResetClick} id=\"reset\">\n              RESET\n          </button></div>\n        </div>\n      </div>\n      \n        <footer> POIANA KIM &copy;  {new Date().getFullYear()} POMODORO CLOCK </footer>\n    \n      <audio\n        id=\"beep\"\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}